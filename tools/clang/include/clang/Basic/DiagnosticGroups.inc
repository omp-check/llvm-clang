
#ifdef GET_DIAG_ARRAYS
static const short DiagSubGroup0[] = { 131, -1 };
static const short DiagArray1[] = { diag::warn_pragma_message, -1 };
static const short DiagArray2[] = { diag::pp_hash_warning, -1 };
static const short DiagArray3[] = { diag::warn_cfstring_truncated, -1 };
static const short DiagArray4[] = { diag::warn_nsobject_attribute, -1 };
static const short DiagArray6[] = { diag::warn_abstract_final_class, -1 };
static const short DiagArray8[] = { diag::warn_temporary_array_to_pointer_decay, -1 };
static const short DiagArray9[] = { diag::ext_typecheck_addrof_temporary, -1 };
static const short DiagSubGroup11[] = { 219, 268, 339, -1 };
static const short DiagArray12[] = { diag::warn_pp_ambiguous_macro, -1 };
static const short DiagArray13[] = { diag::ext_nested_name_member_ref_lookup_ambiguous, -1 };
static const short DiagArray14[] = { diag::warn_incompatible_analyzer_plugin_api, -1 };
static const short DiagArray15[] = { diag::ext_abstract_pack_declarator_parens, -1 };
static const short DiagSubGroup16[] = { 24, 23, 20, -1 };
static const short DiagArray18[] = { diag::warn_arc_bridge_cast_nonarc, -1 };
static const short DiagArray19[] = { diag::warn_arc_possible_repeated_use_of_weak, -1 };
static const short DiagArray20[] = { diag::warn_arc_object_memaccess, -1 };
static const short DiagArray21[] = { diag::warn_arc_perform_selector_leaks, -1 };
static const short DiagArray22[] = { diag::warn_arc_repeated_use_of_weak, -1 };
static const short DiagSubGroup22[] = { 19, -1 };
static const short DiagArray23[] = { diag::warn_arc_retain_cycle, -1 };
static const short DiagArray24[] = { diag::warn_arc_literal_assign, diag::warn_arc_retained_assign, diag::warn_arc_retained_property_assign, -1 };
static const short DiagArray25[] = { diag::warn_array_index_exceeds_bounds, diag::warn_array_index_precedes_bounds, diag::warn_static_array_too_small, diag::warn_typecheck_zero_static_array_size, -1 };
static const short DiagArray26[] = { diag::warn_ptr_arith_exceeds_bounds, diag::warn_ptr_arith_precedes_bounds, -1 };
static const short DiagSubGroup27[] = { 28, -1 };
static const short DiagArray28[] = { diag::warn_asm_mismatched_size_modifier, -1 };
static const short DiagArray29[] = { diag::warn_not_in_enum_assignement, -1 };
static const short DiagSubGroup30[] = { 157, 86, -1 };
static const short DiagArray31[] = { diag::warn_atomic_property_rule, -1 };
static const short DiagArray32[] = { diag::warn_ms_declspec_unknown, diag::warn_unknown_attribute_ignored, -1 };
static const short DiagArray33[] = { diag::warn_auto_module_import, -1 };
static const short DiagArray34[] = { diag::ext_auto_storage_class, -1 };
static const short DiagArray35[] = { diag::warn_auto_var_is_id, -1 };
static const short DiagArray36[] = { diag::warn_availability_and_unavailable, diag::warn_availability_unknown_platform, diag::warn_availability_version_ordering, diag::warn_mismatched_availability, diag::warn_mismatched_availability_override, diag::warn_mismatched_availability_override_unavail, -1 };
static const short DiagArray37[] = { diag::backslash_newline_space, -1 };
static const short DiagArray38[] = { diag::warn_array_new_too_large, diag::warn_typecheck_negative_array_new_size, -1 };
static const short DiagArray39[] = { diag::warn_bad_function_cast, -1 };
static const short DiagArray40[] = { diag::ext_rvalue_to_reference_access_ctor, diag::ext_rvalue_to_reference_temp_copy_no_viable, -1 };
static const short DiagSubGroup40[] = { 60, -1 };
static const short DiagArray41[] = { diag::warn_impcast_bitfield_precision_constant, -1 };
static const short DiagArray42[] = { diag::warn_bitwise_and_in_bitwise_or, -1 };
static const short DiagArray43[] = { diag::warn_impcast_bool_to_null_pointer, diag::warn_impcast_function_to_bool, -1 };
static const short DiagSubGroup44[] = { 43, -1 };
static const short DiagArray45[] = { diag::ext_pp_redef_builtin_macro, diag::ext_pp_undef_builtin_macro, -1 };
static const short DiagArray46[] = { diag::warn_implicit_decl_requires_setjmp, diag::warn_implicit_decl_requires_stdio, diag::warn_implicit_decl_requires_ucontext, -1 };
static const short DiagArray47[] = { diag::warn_empty_struct_union_compat, -1 };
static const short DiagSubGroup48[] = { 51, -1 };
static const short DiagSubGroup49[] = { 54, -1 };
static const short DiagSubGroup50[] = { 57, -1 };
static const short DiagArray51[] = { diag::warn_auto_storage_class, diag::warn_cxx0x_right_shift_in_template_arg, diag::warn_cxx11_compat_user_defined_literal, diag::warn_cxx11_keyword, diag::warn_explicit_instantiation_inline_0x, diag::warn_explicit_instantiation_must_be_global_0x, diag::warn_explicit_instantiation_out_of_scope_0x, diag::warn_explicit_instantiation_unqualified_wrong_namespace_0x, -1 };
static const short DiagSubGroup51[] = { 57, 53, 87, -1 };
static const short DiagSubGroup52[] = { 88, -1 };
static const short DiagArray53[] = { diag::warn_cxx11_compat_reserved_user_defined_literal, -1 };
static const short DiagArray54[] = { diag::ext_alias_declaration, diag::ext_array_size_conversion, diag::ext_auto_type_specifier, diag::ext_cxx11_enum_fixed_underlying_type, diag::ext_defaulted_function, diag::ext_deleted_function, diag::ext_enumerator_list_comma_cxx, diag::ext_explicit_conversion_functions, diag::ext_explicit_instantiation_after_specialization, diag::ext_extern_template, diag::ext_for_range, diag::ext_generalized_initializer_lists, diag::ext_inline_namespace, diag::ext_nonclass_type_friend, diag::ext_nonstatic_member_init, diag::ext_override_control_keyword, diag::ext_ref_qualifier, diag::ext_rvalue_reference, diag::ext_scoped_enum, diag::ext_static_data_member_in_union, diag::ext_template_arg_object_internal, diag::ext_template_outside_of_template, diag::ext_template_parameter_default_in_function_template, diag::ext_template_spec_decl_out_of_scope, diag::ext_typename_outside_of_template, diag::ext_unelaborated_friend_type, diag::ext_variadic_templates, -1 };
static const short DiagSubGroup54[] = { 55, 56, -1 };
static const short DiagArray55[] = { diag::ext_extra_semi_cxx11, -1 };
static const short DiagArray56[] = { diag::ext_cxx11_longlong, -1 };
static const short DiagArray57[] = { diag::err_cce_narrowing, diag::err_init_list_constant_narrowing, diag::err_init_list_type_narrowing, diag::err_init_list_variable_narrowing, diag::warn_init_list_constant_narrowing, diag::warn_init_list_type_narrowing, diag::warn_init_list_variable_narrowing, -1 };
static const short DiagArray58[] = { diag::ext_binary_literal_cxx1y, diag::ext_constexpr_body_invalid_stmt, diag::ext_constexpr_body_multiple_return, diag::ext_constexpr_local_var, diag::ext_constexpr_type_definition, diag::ext_decltype_auto_type_specifier, -1 };
static const short DiagArray59[] = { diag::warn_cxx98_compat_alias_declaration, diag::warn_cxx98_compat_alignas, diag::warn_cxx98_compat_alignof, diag::warn_cxx98_compat_attribute, diag::warn_cxx98_compat_auto_type_specifier, diag::warn_cxx98_compat_constexpr, diag::warn_cxx98_compat_ctor_list_init, diag::warn_cxx98_compat_decltype, diag::warn_cxx98_compat_defaulted_function, diag::warn_cxx98_compat_delegating_ctor, diag::warn_cxx98_compat_deleted_function, diag::warn_cxx98_compat_empty_scalar_initializer, diag::warn_cxx98_compat_enum_fixed_underlying_type, diag::warn_cxx98_compat_enum_friend, diag::warn_cxx98_compat_enum_nested_name_spec, diag::warn_cxx98_compat_explicit_conversion_functions, diag::warn_cxx98_compat_for_range, diag::warn_cxx98_compat_friend_is_member, diag::warn_cxx98_compat_friend_redefinition, diag::warn_cxx98_compat_generalized_initializer_lists, diag::warn_cxx98_compat_goto_into_protected_scope, diag::warn_cxx98_compat_indirect_goto_in_protected_scope, diag::warn_cxx98_compat_initializer_list_init, diag::warn_cxx98_compat_inline_namespace, diag::warn_cxx98_compat_lambda, diag::warn_cxx98_compat_less_colon_colon, diag::warn_cxx98_compat_literal_operator, diag::warn_cxx98_compat_literal_ucn_control_character, diag::warn_cxx98_compat_literal_ucn_escape_basic_scs, diag::warn_cxx98_compat_noexcept_decl, diag::warn_cxx98_compat_noexcept_expr, diag::warn_cxx98_compat_non_static_member_use, diag::warn_cxx98_compat_nonclass_type_friend, diag::warn_cxx98_compat_nonstatic_member_init, diag::warn_cxx98_compat_nontrivial_union_or_anon_struct_member, diag::warn_cxx98_compat_nullptr, diag::warn_cxx98_compat_override_control_keyword, diag::warn_cxx98_compat_pass_non_pod_arg_to_vararg, diag::warn_cxx98_compat_raw_string_literal, diag::warn_cxx98_compat_ref_qualifier, diag::warn_cxx98_compat_reference_list_init, diag::warn_cxx98_compat_rvalue_reference, diag::warn_cxx98_compat_scoped_enum, diag::warn_cxx98_compat_sfinae_access_control, diag::warn_cxx98_compat_static_assert, diag::warn_cxx98_compat_static_data_member_in_union, diag::warn_cxx98_compat_switch_into_protected_scope, diag::warn_cxx98_compat_template_arg_extra_parens, diag::warn_cxx98_compat_template_arg_null, diag::warn_cxx98_compat_template_arg_object_internal, diag::warn_cxx98_compat_template_outside_of_template, diag::warn_cxx98_compat_template_parameter_default_in_function_template, diag::warn_cxx98_compat_template_spec_decl_out_of_scope, diag::warn_cxx98_compat_trailing_return_type, diag::warn_cxx98_compat_two_right_angle_brackets, diag::warn_cxx98_compat_typename_outside_of_template, diag::warn_cxx98_compat_unelaborated_friend_type, diag::warn_cxx98_compat_unicode_id, diag::warn_cxx98_compat_unicode_literal, diag::warn_cxx98_compat_unicode_type, diag::warn_cxx98_compat_using_decl_constructor, diag::warn_cxx98_compat_variadic_templates, -1 };
static const short DiagSubGroup59[] = { 60, 61, 63, 87, -1 };
static const short DiagArray60[] = { diag::warn_cxx98_compat_temp_copy, -1 };
static const short DiagArray61[] = { diag::warn_cxx98_compat_template_arg_local_type, -1 };
static const short DiagArray62[] = { diag::warn_cxx98_compat_array_size_conversion, diag::warn_cxx98_compat_cast_fn_obj, diag::warn_cxx98_compat_empty_fnmacro_arg, diag::warn_cxx98_compat_enumerator_list_comma, diag::warn_cxx98_compat_explicit_instantiation_after_specialization, diag::warn_cxx98_compat_extern_template, diag::warn_cxx98_compat_longlong, diag::warn_cxx98_compat_no_newline_eof, diag::warn_cxx98_compat_pp_line_too_big, diag::warn_cxx98_compat_top_level_semi, diag::warn_cxx98_compat_variadic_macro, -1 };
static const short DiagSubGroup62[] = { 59, 88, -1 };
static const short DiagArray63[] = { diag::warn_cxx98_compat_template_arg_unnamed_type, -1 };
static const short DiagArray64[] = { diag::ext_anonymous_union, diag::ext_c11_alignment, diag::ext_c11_anonymous_struct, diag::ext_c11_generic_selection, diag::ext_c11_noreturn, diag::ext_c11_static_assert, -1 };
static const short DiagArray65[] = { diag::warn_c99_compat_unicode_id, diag::warn_c99_compat_unicode_literal, -1 };
static const short DiagArray66[] = { diag::ext_c99_array_usage, diag::ext_c99_compound_literal, diag::ext_c99_flexible_array_member, diag::ext_c99_variable_decl_in_for_loop, diag::ext_c99_whitespace_required_after_macro_name, diag::ext_designated_init, diag::ext_empty_fnmacro_arg, diag::ext_enumerator_list_comma_c, diag::ext_hexconstant_invalid, -1 };
static const short DiagArray67[] = { diag::warn_cast_align, -1 };
static const short DiagArray68[] = { diag::warn_cast_pointer_from_sel, -1 };
static const short DiagArray71[] = { diag::warn_subscript_is_char, -1 };
static const short DiagArray72[] = { diag::escaped_newline_block_comment_end, diag::ext_line_comment, diag::ext_multi_line_line_comment, diag::warn_nested_block_comment, -1 };
static const short DiagSubGroup73[] = { 72, -1 };
static const short DiagArray74[] = { diag::ext_typecheck_comparison_of_distinct_pointers, diag::ext_typecheck_comparison_of_distinct_pointers_nonstandard, -1 };
static const short DiagArray75[] = { diag::ext_complex_component_init, -1 };
static const short DiagArray76[] = { diag::warn_typecheck_cond_pointer_integer_mismatch, -1 };
static const short DiagArray77[] = { diag::warn_maybe_uninit_var, -1 };
static const short DiagArray78[] = { diag::warn_module_config_macro_undef, -1 };
static const short DiagArray79[] = { diag::warn_impcast_integer_precision_constant, -1 };
static const short DiagSubGroup79[] = { 41, -1 };
static const short DiagArray80[] = { diag::warn_logical_instead_of_bitwise, -1 };
static const short DiagArray81[] = { diag::warn_cxx1y_compat_constexpr_not_const, -1 };
static const short DiagArray82[] = { diag::warn_impcast_complex_scalar, diag::warn_impcast_float_integer, diag::warn_impcast_float_precision, diag::warn_impcast_integer_precision, diag::warn_impcast_vector_scalar, diag::warn_template_arg_negative, diag::warn_template_arg_too_large, -1 };
static const short DiagSubGroup82[] = { 43, 79, 126, 306, 176, 191, 226, 233, 308, 334, -1 };
static const short DiagSubGroup83[] = { 233, -1 };
static const short DiagArray84[] = { diag::warn_unreachable_default, -1 };
static const short DiagArray86[] = { diag::warn_default_atomic_custom_getter_setter, -1 };
static const short DiagArray87[] = { diag::warn_cxx11_compat_constexpr_body_invalid_stmt, diag::warn_cxx11_compat_constexpr_body_multiple_return, diag::warn_cxx11_compat_constexpr_body_no_return, diag::warn_cxx11_compat_constexpr_local_var, diag::warn_cxx11_compat_constexpr_type_definition, diag::warn_cxx11_compat_decltype_auto_type_specifier, -1 };
static const short DiagArray88[] = { diag::warn_cxx11_compat_array_of_runtime_bound, diag::warn_cxx11_compat_binary_literal, -1 };
static const short DiagSubGroup88[] = { 87, -1 };
static const short DiagArray89[] = { diag::warn_dangling_else, -1 };
static const short DiagArray90[] = { diag::warn_bind_ref_member_to_parameter, diag::warn_bind_ref_member_to_temporary, diag::warn_init_ptr_member_to_parameter_addr, -1 };
static const short DiagArray91[] = { diag::warn_dangling_std_initializer_list, -1 };
static const short DiagArray92[] = { diag::ext_mixed_decls_code, -1 };
static const short DiagArray93[] = { diag::warn_delegating_ctor_cycle, -1 };
static const short DiagArray94[] = { diag::warn_delete_incomplete, -1 };
static const short DiagArray95[] = { diag::warn_delete_abstract_non_virtual_dtor, diag::warn_delete_non_virtual_dtor, -1 };
static const short DiagArray96[] = { diag::warn_access_decl_deprecated, diag::warn_drv_deprecated_arg, diag::warn_drv_treating_input_as_cxx, diag::warn_increment_bool, diag::warn_vector_long_decl_spec_combination, -1 };
static const short DiagSubGroup96[] = { 97, -1 };
static const short DiagArray97[] = { diag::warn_cstyle_param, diag::warn_deprecated, diag::warn_deprecated_fwdclass_message, diag::warn_deprecated_message, -1 };
static const short DiagArray98[] = { diag::warn_deprecated_def, -1 };
static const short DiagArray99[] = { diag::warn_objc_isa_assign, diag::warn_objc_isa_use, -1 };
static const short DiagArray100[] = { diag::warn_objc_pointer_masking, -1 };
static const short DiagArray101[] = { diag::warn_deprecated_string_literal_conversion, -1 };
static const short DiagArray102[] = { diag::warn_direct_ivar_access, -1 };
static const short DiagArray103[] = { diag::pp_disabled_macro_expansion, -1 };
static const short DiagArray106[] = { diag::warn_conflicting_param_modifiers, diag::warn_conflicting_ret_type_modifiers, -1 };
static const short DiagArray108[] = { diag::warn_division_by_zero, diag::warn_remainder_by_zero, -1 };
static const short DiagArray109[] = { diag::warn_doc_api_container_decl_mismatch, diag::warn_doc_block_command_duplicate, diag::warn_doc_block_command_empty_paragraph, diag::warn_doc_container_decl_mismatch, diag::warn_doc_function_method_decl_mismatch, diag::warn_doc_html_start_tag_expected_ident_or_greater, diag::warn_doc_html_start_tag_expected_quoted_string, diag::warn_doc_param_duplicate, diag::warn_doc_param_invalid_direction, diag::warn_doc_param_not_attached_to_a_function_decl, diag::warn_doc_param_not_found, diag::warn_doc_returns_attached_to_a_void_function, diag::warn_doc_returns_not_attached_to_a_function_decl, diag::warn_doc_tparam_duplicate, diag::warn_doc_tparam_not_attached_to_a_template_decl, diag::warn_doc_tparam_not_found, diag::warn_not_a_doxygen_trailing_member_comment, diag::warn_verbatim_block_end_without_start, -1 };
static const short DiagSubGroup109[] = { 111, 110, -1 };
static const short DiagArray110[] = { diag::warn_doc_deprecated_not_sync, -1 };
static const short DiagArray111[] = { diag::warn_doc_html_end_forbidden, diag::warn_doc_html_end_unbalanced, diag::warn_doc_html_start_end_mismatch, -1 };
static const short DiagArray112[] = { diag::warn_doc_param_spaces_in_direction, -1 };
static const short DiagSubGroup112[] = { 113, -1 };
static const short DiagArray113[] = { diag::warn_unknown_comment_command_name, -1 };
static const short DiagArray114[] = { diag::ext_dollar_in_identifier, -1 };
static const short DiagArray115[] = { diag::ext_duplicate_declspec, diag::warn_duplicate_declspec, -1 };
static const short DiagArray116[] = { diag::warn_duplicate_enum_values, -1 };
static const short DiagArray117[] = { diag::warn_method_param_declaration, -1 };
static const short DiagArray118[] = { diag::warn_duplicate_method_decl, -1 };
static const short DiagArray119[] = { diag::warn_dyn_class_memaccess, -1 };
static const short DiagArray121[] = { diag::ext_embedded_directive, -1 };
static const short DiagArray122[] = { diag::warn_empty_for_body, diag::warn_empty_if_body, diag::warn_empty_range_based_for_body, diag::warn_empty_switch_body, diag::warn_empty_while_body, -1 };
static const short DiagArray123[] = { diag::ext_empty_translation_unit, -1 };
static const short DiagSubGroup124[] = { 133, -1 };
static const short DiagArray125[] = { diag::warn_comparison_of_mixed_enum_types, -1 };
static const short DiagArray126[] = { diag::warn_impcast_different_enum_types, -1 };
static const short DiagArray127[] = { diag::warn_exit_time_destructor, -1 };
static const short DiagArray128[] = { diag::warn_arc_strong_pointer_objc_pointer, -1 };
static const short DiagArray129[] = { diag::ext_offsetof_extended_field_designator, -1 };
static const short DiagArray130[] = { diag::warn_extern_init, -1 };
static const short DiagSubGroup131[] = { 209, 155, 174, 295, 212, 307, 381, -1 };
static const short DiagArray132[] = { diag::ext_extra_semi, diag::warn_extra_semi_after_mem_fn_def, -1 };
static const short DiagSubGroup132[] = { 55, -1 };
static const short DiagArray133[] = { diag::ext_pp_extra_tokens_at_eol, diag::warn_omp_extra_tokens_at_eol, -1 };
static const short DiagArray134[] = { diag::ext_flexible_array_in_array, diag::ext_flexible_array_in_struct, -1 };
static const short DiagArray135[] = { diag::warn_floatingpoint_eq, -1 };
static const short DiagArray136[] = { diag::warn_format_argument_needs_cast, diag::warn_format_invalid_positional_specifier, diag::warn_format_mix_positional_nonpositional_args, diag::warn_format_nonsensical_length, diag::warn_format_string_is_wide_literal, diag::warn_format_zero_positional_specifier, diag::warn_missing_format_string, diag::warn_printf_asterisk_missing_arg, diag::warn_printf_asterisk_wrong_type, diag::warn_printf_conversion_argument_type_mismatch, diag::warn_printf_format_string_contains_null_char, diag::warn_printf_ignored_flag, diag::warn_printf_incomplete_specifier, diag::warn_printf_insufficient_data_args, diag::warn_printf_nonsensical_flag, diag::warn_printf_nonsensical_optional_amount, diag::warn_printf_positional_arg_exceeds_data_args, diag::warn_scanf_nonzero_width, diag::warn_scanf_scanlist_incomplete, -1 };
static const short DiagSubGroup136[] = { 137, 143, 229, 141, 142, 138, -1 };
static const short DiagArray137[] = { diag::warn_printf_data_arg_not_used, -1 };
static const short DiagArray138[] = { diag::warn_format_invalid_conversion, -1 };
static const short DiagArray139[] = { diag::warn_format_non_standard, diag::warn_format_non_standard_conversion_spec, diag::warn_format_non_standard_positional_arg, -1 };
static const short DiagArray140[] = { diag::warn_format_nonliteral, -1 };
static const short DiagSubGroup140[] = { 141, -1 };
static const short DiagArray141[] = { diag::warn_format_nonliteral_noargs, -1 };
static const short DiagArray143[] = { diag::warn_empty_format_string, -1 };
static const short DiagSubGroup144[] = { 140, 141, 142, -1 };
static const short DiagArray145[] = { diag::ext_four_char_character_literal, -1 };
static const short DiagArray146[] = { diag::warn_attribute_on_function_definition, -1 };
static const short DiagArray147[] = { diag::warn_global_constructor, diag::warn_global_destructor, -1 };
static const short DiagArray148[] = { diag::ext_alignof_expr, diag::ext_array_init_copy, diag::ext_binary_literal, diag::ext_empty_struct_union, diag::ext_expr_not_ice, diag::ext_flexible_array_empty_aggregate_gnu, diag::ext_flexible_array_init, diag::ext_flexible_array_union_gnu, diag::ext_forward_ref_enum_def, diag::ext_gnu_address_of_label, diag::ext_gnu_anonymous_struct, diag::ext_gnu_case_range, diag::ext_gnu_conditional_expr, diag::ext_gnu_empty_initializer, diag::ext_gnu_indirect_goto, diag::ext_gnu_local_label, diag::ext_gnu_statement_expr, diag::ext_imaginary_constant, diag::ext_in_class_initializer_non_constant, diag::ext_integer_complex, diag::ext_missing_varargs_arg, diag::ext_paste_comma, diag::ext_pp_line_zero, diag::ext_typecheck_cast_to_union, diag::ext_variable_sized_type_in_struct, -1 };
static const short DiagSubGroup148[] = { 150, 396, 401, 151, -1 };
static const short DiagArray149[] = { diag::ext_array_init_parens, -1 };
static const short DiagArray150[] = { diag::ext_gnu_array_range, diag::ext_gnu_missing_equal_designator, diag::ext_gnu_old_style_field_designator, -1 };
static const short DiagArray151[] = { diag::ext_in_class_initializer_float_type, -1 };
static const short DiagArray152[] = { diag::warn_using_directive_in_header, -1 };
static const short DiagArray153[] = { diag::warn_condition_is_idiomatic_assignment, -1 };
static const short DiagArray154[] = { diag::warn_attribute_after_definition_ignored, diag::warn_attribute_ibaction, diag::warn_attribute_iboutlet, diag::warn_attribute_ignored, diag::warn_attribute_ignored_for_field_of_type, diag::warn_attribute_malloc_pointer_only, diag::warn_attribute_no_decl, diag::warn_attribute_nonnull_no_pointers, diag::warn_attribute_not_on_decl, diag::warn_attribute_precede_definition, diag::warn_attribute_requires_functions_or_static_globals, diag::warn_attribute_sentinel_named_arguments, diag::warn_attribute_sentinel_not_variadic, diag::warn_attribute_type_not_supported, diag::warn_attribute_unknown_endian, diag::warn_attribute_unknown_visibility, diag::warn_attribute_void_function_method, diag::warn_attribute_weak_import_invalid_on_definition, diag::warn_attribute_weak_on_field, diag::warn_attribute_weak_on_local, diag::warn_attribute_wrong_decl_type, diag::warn_cconv_ignored, diag::warn_cxx11_gnu_attribute_on_type, diag::warn_declspec_attribute_ignored, diag::warn_duplicate_attribute, diag::warn_function_attribute_wrong_type, diag::warn_gc_attribute_weak_on_local, diag::warn_gnu_inline_attribute_requires_inline, diag::warn_mmap_unknown_attribute, diag::warn_ns_attribute_wrong_parameter_type, diag::warn_ns_attribute_wrong_return_type, diag::warn_objc_object_attribute_wrong_type, diag::warn_pointer_attribute_wrong_type, diag::warn_transparent_union_attribute_field_size_align, diag::warn_transparent_union_attribute_floating, diag::warn_transparent_union_attribute_not_definition, diag::warn_transparent_union_attribute_zero_fields, diag::warn_unhandled_ms_attribute_ignored, -1 };
static const short DiagArray155[] = { diag::warn_arc_lifetime_result_type, diag::warn_qual_return_type, -1 };
static const short DiagSubGroup156[] = { 162, 163, -1 };
static const short DiagArray157[] = { diag::warn_auto_implicit_atomic_property, diag::warn_implicit_atomic_property, -1 };
static const short DiagArray158[] = { diag::warn_impcast_floating_point_to_bool, -1 };
static const short DiagArray159[] = { diag::ext_implicit_exception_spec_mismatch, -1 };
static const short DiagArray160[] = { diag::warn_fallthrough_attr_invalid_placement, diag::warn_fallthrough_attr_unreachable, diag::warn_unannotated_fallthrough, -1 };
static const short DiagSubGroup160[] = { 161, -1 };
static const short DiagArray161[] = { diag::warn_unannotated_fallthrough_per_function, -1 };
static const short DiagArray162[] = { diag::ext_implicit_function_decl, diag::warn_builtin_unknown, diag::warn_implicit_function_decl, -1 };
static const short DiagArray163[] = { diag::ext_missing_type_specifier, -1 };
static const short DiagArray164[] = { diag::warn_implicitly_retains_self, -1 };
static const short DiagArray166[] = { diag::ext_pp_import_directive, -1 };
static const short DiagArray167[] = { diag::warn_redecl_library_builtin, -1 };
static const short DiagArray168[] = { diag::ext_typecheck_convert_incompatible_pointer, -1 };
static const short DiagSubGroup168[] = { 169, -1 };
static const short DiagArray169[] = { diag::ext_nested_pointer_qualifier_mismatch, diag::ext_typecheck_convert_discards_qualifiers, -1 };
static const short DiagArray170[] = { diag::warn_undef_method_impl, -1 };
static const short DiagArray171[] = { diag::warn_missing_submodule, diag::warn_uncovered_module_header, -1 };
static const short DiagArray172[] = { diag::warn_using_decl_constructor_ellipsis, -1 };
static const short DiagArray174[] = { diag::warn_initializer_overrides, diag::warn_subobject_initializer_overrides, -1 };
static const short DiagArray176[] = { diag::ext_typecheck_convert_int_pointer, diag::ext_typecheck_convert_pointer_int, -1 };
static const short DiagSubGroup177[] = { 176, -1 };
static const short DiagArray178[] = { diag::warn_int_to_pointer_cast, -1 };
static const short DiagArray179[] = { diag::warn_integer_constant_overflow, -1 };
static const short DiagArray180[] = { diag::ext_constexpr_function_never_constant_expr, -1 };
static const short DiagArray181[] = { diag::warn_iboutlet_object_type, -1 };
static const short DiagArray182[] = { diag::warn_falloff_noreturn_function, diag::warn_noreturn_function_has_return_expr, -1 };
static const short DiagArray183[] = { diag::warn_offsetof_non_pod_type, diag::warn_offsetof_non_standardlayout_type, -1 };
static const short DiagArray185[] = { diag::ext_empty_character, diag::ext_unterminated_char, diag::ext_unterminated_string, -1 };
static const short DiagArray186[] = { diag::warn_bad_character_encoding, diag::warn_bad_string_encoding, -1 };
static const short DiagArray187[] = { diag::err_pp_bad_paste_ms, -1 };
static const short DiagArray188[] = { diag::ext_param_promoted_not_compatible_with_prototype, -1 };
static const short DiagArray189[] = { diag::ext_token_used, -1 };
static const short DiagArray190[] = { diag::warn_parameter_size, diag::warn_return_value_size, -1 };
static const short DiagArray191[] = { diag::warn_impcast_literal_float_to_integer, -1 };
static const short DiagArray192[] = { diag::warn_float_overflow, diag::warn_float_underflow, -1 };
static const short DiagArray193[] = { diag::ext_template_arg_local_type, -1 };
static const short DiagSubGroup193[] = { 61, -1 };
static const short DiagArray194[] = { diag::warn_logical_and_in_logical_or, -1 };
static const short DiagArray195[] = { diag::ext_c99_longlong, -1 };
static const short DiagSubGroup195[] = { 56, -1 };
static const short DiagArray196[] = { diag::warn_variables_not_in_loop_body, -1 };
static const short DiagArray197[] = { diag::ext_noreturn_main, diag::warn_main_one_arg, diag::warn_static_main, -1 };
static const short DiagArray198[] = { diag::ext_main_returns_nonint, -1 };
static const short DiagArray199[] = { diag::warn_has_warning_invalid_option, -1 };
static const short DiagArray200[] = { diag::warn_non_contravariant_param_types, diag::warn_non_covariant_ret_types, -1 };
static const short DiagArray201[] = { diag::ext_anonymous_record_with_type, diag::ext_c_enum_fixed_underlying_type, diag::ext_charize_microsoft, diag::ext_ellipsis_exception_spec, diag::ext_enumerator_too_large, diag::ext_flexible_array_empty_aggregate_ms, diag::ext_flexible_array_union_ms, diag::ext_function_specialization_in_class, diag::ext_ms_anonymous_struct, diag::ext_ms_explicit_constructor_call, diag::ext_ms_forward_ref_enum, diag::ext_ms_using_declaration_inaccessible, diag::ext_pseudo_dtor_on_void, diag::warn_found_via_dependent_bases_lookup, diag::warn_goto_into_protected_scope, diag::warn_member_extra_qualification, diag::warn_override_exception_spec, diag::warn_pure_function_definition, -1 };
static const short DiagArray202[] = { diag::warn_microsoft_dependent_exists, -1 };
static const short DiagArray203[] = { diag::warn_attribute_method_def, -1 };
static const short DiagArray204[] = { diag::warn_conflicting_param_types, -1 };
static const short DiagArray205[] = { diag::warn_conflicting_ret_types, -1 };
static const short DiagArray206[] = { diag::warn_struct_class_previous_tag_mismatch, diag::warn_struct_class_tag_mismatch, -1 };
static const short DiagArray207[] = { diag::warn_missing_braces, -1 };
static const short DiagArray208[] = { diag::ext_no_declarators, diag::ext_standalone_specifier, diag::ext_typedef_without_a_name, diag::warn_standalone_specifier, -1 };
static const short DiagArray209[] = { diag::warn_missing_field_initializers, -1 };
static const short DiagArray212[] = { diag::warn_missing_method_return_type, -1 };
static const short DiagArray213[] = { diag::warn_suggest_noreturn_block, diag::warn_suggest_noreturn_function, -1 };
static const short DiagArray214[] = { diag::warn_missing_prototype, -1 };
static const short DiagArray215[] = { diag::warn_missing_selector_name, -1 };
static const short DiagArray216[] = { diag::warn_missing_sysroot, -1 };
static const short DiagArray217[] = { diag::warn_missing_variable_declarations, -1 };
static const short DiagArray218[] = { diag::warn_module_conflict, -1 };
static const short DiagSubGroup219[] = { 71, 72, 95, 136, 156, 206, 207, 220, 285, 289, 293, 310, 311, 335, 351, 363, 364, 372, 397, 242, 264, 276, 68, -1 };
static const short DiagArray220[] = { diag::ext_multichar_character_literal, -1 };
static const short DiagSubGroup221[] = { 57, -1 };
static const short DiagArray222[] = { diag::ext_anonymous_record_with_anonymous_type, -1 };
static const short DiagArray224[] = { diag::ext_no_newline_eof, -1 };
static const short DiagSubGroup225[] = { 307, 82, 192, -1 };
static const short DiagArray226[] = { diag::warn_non_literal_null_pointer, -1 };
static const short DiagArray227[] = { diag::warn_cannot_pass_non_pod_arg_to_vararg, diag::warn_non_pod_vararg_with_format_string, diag::warn_second_parameter_to_va_arg_not_pod, diag::warn_second_parameter_to_va_arg_ownership_qualified, -1 };
static const short DiagArray228[] = { diag::warn_non_virtual_dtor, -1 };
static const short DiagArray229[] = { diag::warn_null_arg, -1 };
static const short DiagArray231[] = { diag::warn_null_in_arithmetic_operation, diag::warn_null_in_comparison_operation, -1 };
static const short DiagArray232[] = { diag::null_in_char, diag::null_in_file, diag::null_in_string, -1 };
static const short DiagArray233[] = { diag::warn_impcast_null_pointer_to_integer, -1 };
static const short DiagArray234[] = { diag::warn_indirection_through_null, -1 };
static const short DiagArray235[] = { diag::warn_autosynthesis_property_ivar_match, -1 };
static const short DiagSubGroup236[] = { 252, -1 };
static const short DiagArray237[] = { diag::warn_forward_class_redefinition, -1 };
static const short DiagArray238[] = { diag::warn_ivars_in_interface, -1 };
static const short DiagArray239[] = { diag::warn_objc_literal_comparison, -1 };
static const short DiagSubGroup239[] = { 255, -1 };
static const short DiagArray240[] = { diag::warn_class_method_not_found, diag::warn_inst_method_not_found, diag::warn_instance_method_on_class_found, diag::warn_root_inst_method_not_found, -1 };
static const short DiagArray241[] = { diag::warn_missing_explicit_synthesis, -1 };
static const short DiagArray242[] = { diag::warn_objc_missing_super_call, -1 };
static const short DiagArray243[] = { diag::warn_objc_property_retain_of_block, -1 };
static const short DiagArray244[] = { diag::warn_objc_pointer_cxx_catch_fragile, -1 };
static const short DiagArray245[] = { diag::warn_setter_getter_impl_required, diag::warn_setter_getter_impl_required_in_category, -1 };
static const short DiagArray246[] = { diag::warn_owning_getter_rule, -1 };
static const short DiagArray247[] = { diag::warn_objc_property_default_assign_on_object, diag::warn_objc_property_no_assignment_attribute, -1 };
static const short DiagArray248[] = { diag::warn_no_autosynthesis_property, diag::warn_no_autosynthesis_shared_ivar_property, -1 };
static const short DiagArray249[] = { diag::warn_category_method_impl_match, -1 };
static const short DiagArray250[] = { diag::warn_auto_synthesizing_protocol_property, -1 };
static const short DiagArray251[] = { diag::warn_objc_readonly_property_has_setter, -1 };
static const short DiagSubGroup252[] = { 253, -1 };
static const short DiagArray253[] = { diag::warn_objc_redundant_literal_use, -1 };
static const short DiagArray254[] = { diag::warn_objc_root_class_missing, -1 };
static const short DiagArray255[] = { diag::warn_objc_string_literal_comparison, -1 };
static const short DiagArray256[] = { diag::warn_odr_tag_type_inconsistent, -1 };
static const short DiagArray259[] = { diag::ext_out_of_line_declaration, -1 };
static const short DiagArray260[] = { diag::warn_overaligned_type, -1 };
static const short DiagArray262[] = { diag::ext_string_too_long, -1 };
static const short DiagArray263[] = { diag::warn_overloaded_shift_in_comparison, -1 };
static const short DiagArray264[] = { diag::warn_overloaded_virtual, -1 };
static const short DiagArray265[] = { diag::warn_conflicting_overriding_param_modifiers, diag::warn_conflicting_overriding_param_types, diag::warn_conflicting_overriding_ret_type_modifiers, diag::warn_conflicting_overriding_ret_types, diag::warn_conflicting_overriding_variadic, diag::warn_non_contravariant_overriding_param_types, diag::warn_non_covariant_overriding_ret_types, -1 };
static const short DiagArray266[] = { diag::warn_unnecessary_packed, -1 };
static const short DiagArray267[] = { diag::warn_padded_struct_anon_field, diag::warn_padded_struct_field, diag::warn_padded_struct_size, -1 };
static const short DiagArray268[] = { diag::warn_condition_is_assignment, diag::warn_precedence_bitwise_rel, diag::warn_precedence_conditional, -1 };
static const short DiagSubGroup268[] = { 194, 42, 303, 263, 269, 89, -1 };
static const short DiagArray269[] = { diag::warn_equality_with_extra_parens, -1 };
static const short DiagArray270[] = { diag::ext_anonymous_record_with_type, diag::ext_anonymous_struct_union_qualified, diag::ext_array_init_copy, diag::ext_array_size_conversion, diag::ext_binary_literal, diag::ext_binary_literal_cxx1y, diag::ext_c99_array_usage, diag::ext_c99_compound_literal, diag::ext_c99_flexible_array_member, diag::ext_c99_variable_decl_in_for_loop, diag::ext_c_enum_fixed_underlying_type, diag::ext_cast_fn_obj, diag::ext_charize_microsoft, diag::ext_cxx11_enum_fixed_underlying_type, diag::ext_designated_init, diag::ext_ellipsis_exception_spec, diag::ext_empty_fnmacro_arg, diag::ext_empty_struct_union, diag::ext_enum_value_not_int, diag::ext_enumerator_list_comma_c, diag::ext_enumerator_list_comma_cxx, diag::ext_explicit_instantiation_after_specialization, diag::ext_explicit_instantiation_without_qualified_id, diag::ext_expr_not_ice, diag::ext_extern_template, diag::ext_extra_semi, diag::ext_flexible_array_empty_aggregate_gnu, diag::ext_flexible_array_empty_aggregate_ms, diag::ext_flexible_array_init, diag::ext_flexible_array_union_gnu, diag::ext_flexible_array_union_ms, diag::ext_forward_ref_enum, diag::ext_forward_ref_enum_def, diag::ext_freestanding_complex, diag::ext_gnu_address_of_label, diag::ext_gnu_anonymous_struct, diag::ext_gnu_array_range, diag::ext_gnu_case_range, diag::ext_gnu_conditional_expr, diag::ext_gnu_empty_initializer, diag::ext_gnu_indirect_goto, diag::ext_gnu_local_label, diag::ext_gnu_statement_expr, diag::ext_hexconstant_invalid, diag::ext_ident_list_in_param, diag::ext_imaginary_constant, diag::ext_in_class_initializer_non_constant, diag::ext_integer_complement_complex, diag::ext_integer_complex, diag::ext_integer_increment_complex, diag::ext_internal_in_extern_inline, diag::ext_invalid_sign_spec, diag::ext_line_comment, diag::ext_missing_varargs_arg, diag::ext_ms_forward_ref_enum, diag::ext_multi_line_line_comment, diag::ext_nonstandard_escape, diag::ext_param_not_declared, diag::ext_paste_comma, diag::ext_pp_bad_vaargs_use, diag::ext_pp_comma_expr, diag::ext_pp_ident_directive, diag::ext_pp_include_next_directive, diag::ext_pp_line_too_big, diag::ext_pp_line_zero, diag::ext_pp_warning_directive, diag::ext_return_has_void_expr, diag::ext_subscript_non_lvalue, diag::ext_thread_before, diag::ext_typecheck_addrof_void, diag::ext_typecheck_cast_nonscalar, diag::ext_typecheck_cast_to_union, diag::ext_typecheck_comparison_of_fptr_to_void, diag::ext_typecheck_cond_one_void, diag::ext_typecheck_convert_pointer_void_func, diag::ext_typecheck_ordered_comparison_of_pointer_and_zero, diag::ext_vla_folded_to_constant, diag::warn_illegal_constant_array_size, -1 };
static const short DiagSubGroup270[] = { 64, 55, 56, 134, 139, 145, 195, 262, 271, 396, 390, 401, 166, 121, 123, 224, 75, 129, 114, 189, 222, 92, -1 };
static const short DiagArray271[] = { diag::ext_gnu_ptr_func_arith, diag::ext_gnu_subscript_void_type, diag::ext_gnu_void_ptr, diag::ext_sizeof_alignof_function_type, diag::ext_sizeof_alignof_void_type, -1 };
static const short DiagArray272[] = { diag::ext_typecheck_convert_incompatible_pointer_sign, -1 };
static const short DiagArray274[] = { diag::warn_typecheck_cond_incompatible_pointers, -1 };
static const short DiagArray275[] = { diag::ext_predef_outside_function, -1 };
static const short DiagArray276[] = { diag::warn_private_extern, -1 };
static const short DiagArray277[] = { diag::warn_unimplemented_protocol_method, -1 };
static const short DiagArray278[] = { diag::warn_auto_readonly_iboutlet_property, -1 };
static const short DiagArray279[] = { diag::warn_objc_property_attr_mutually_exclusive, -1 };
static const short DiagArray280[] = { diag::warn_bad_receiver_type, -1 };
static const short DiagArray281[] = { diag::warn_receiver_forward_class, diag::warn_receiver_forward_instance, -1 };
static const short DiagArray282[] = { diag::warn_receiver_is_weak, -1 };
static const short DiagArray284[] = { diag::warn_reinterpret_different_from_static, -1 };
static const short DiagArray285[] = { diag::warn_initializer_out_of_order, -1 };
static const short DiagArray286[] = { diag::warn_objc_requires_super_protocol, -1 };
static const short DiagArray287[] = { diag::ext_ms_reserved_user_defined_literal, diag::ext_reserved_user_defined_literal, -1 };
static const short DiagSubGroup287[] = { 53, -1 };
static const short DiagArray288[] = { diag::warn_ret_addr_label, diag::warn_ret_local_temp_addr, diag::warn_ret_local_temp_ref, diag::warn_ret_stack_addr, diag::warn_ret_stack_ref, -1 };
static const short DiagArray289[] = { diag::ext_return_has_expr, diag::ext_return_missing_expr, diag::warn_falloff_nonvoid_function, diag::warn_falloff_nonvoid_lambda, diag::warn_maybe_falloff_nonvoid_function, diag::warn_maybe_falloff_nonvoid_lambda, diag::warn_return_missing_expr, -1 };
static const short DiagSubGroup289[] = { 290, -1 };
static const short DiagArray290[] = { diag::warn_return_value_udt, diag::warn_return_value_udt_incomplete, -1 };
static const short DiagArray291[] = { diag::warn_mismatched_section, -1 };
static const short DiagArray292[] = { diag::warn_unimplemented_selector, -1 };
static const short DiagArray293[] = { diag::warn_self_assignment, -1 };
static const short DiagSubGroup293[] = { 294, -1 };
static const short DiagArray294[] = { diag::warn_identity_field_assign, -1 };
static const short DiagArray295[] = { diag::warn_semicolon_before_method_body, -1 };
static const short DiagArray296[] = { diag::warn_missing_sentinel, diag::warn_not_enough_argument, -1 };
static const short DiagSubGroup297[] = { 370, -1 };
static const short DiagArray298[] = { diag::warn_fe_serialized_diag_failure, -1 };
static const short DiagArray299[] = { diag::warn_decl_shadow, -1 };
static const short DiagArray300[] = { diag::warn_ivar_use_hidden, -1 };
static const short DiagArray301[] = { diag::warn_shift_negative, -1 };
static const short DiagArray302[] = { diag::warn_shift_gt_typewidth, -1 };
static const short DiagArray303[] = { diag::warn_addition_in_bitshift, -1 };
static const short DiagArray304[] = { diag::warn_shift_result_gt_typewidth, -1 };
static const short DiagArray305[] = { diag::warn_shift_result_sets_sign_bit, -1 };
static const short DiagArray306[] = { diag::warn_impcast_integer_64_32, -1 };
static const short DiagArray307[] = { diag::warn_mixed_sign_comparison, -1 };
static const short DiagArray308[] = { diag::warn_impcast_integer_sign, diag::warn_impcast_integer_sign_conditional, -1 };
static const short DiagArray310[] = { diag::warn_sizeof_array_param, -1 };
static const short DiagArray311[] = { diag::warn_sizeof_array_decay, -1 };
static const short DiagArray312[] = { diag::warn_sizeof_pointer_expr_memaccess, diag::warn_sizeof_pointer_type_memaccess, -1 };
static const short DiagArray313[] = { diag::warn_sometimes_uninit_var, -1 };
static const short DiagArray314[] = { diag::warn_pragma_omp_ignored, -1 };
static const short DiagArray316[] = { diag::ext_in_class_initializer_float_type_cxx11, -1 };
static const short DiagSubGroup316[] = { 151, -1 };
static const short DiagArray317[] = { diag::ext_internal_in_extern_inline, diag::warn_internal_in_extern_inline, -1 };
static const short DiagArray318[] = { diag::warn_static_local_in_extern_inline, -1 };
static const short DiagArray319[] = { diag::warn_static_self_reference_in_init, -1 };
static const short DiagArray332[] = { diag::warn_strict_multiple_method_decl, -1 };
static const short DiagArray333[] = { diag::warn_stringcompare, -1 };
static const short DiagArray334[] = { diag::warn_impcast_string_literal_to_bool, -1 };
static const short DiagArray335[] = { diag::warn_string_plus_int, -1 };
static const short DiagArray336[] = { diag::warn_strlcpycat_wrong_size, -1 };
static const short DiagArray337[] = { diag::warn_strncat_large_size, diag::warn_strncat_src_size, diag::warn_strncat_wrong_size, -1 };
static const short DiagArray338[] = { diag::ext_typecheck_base_super, -1 };
static const short DiagArray339[] = { diag::warn_case_value_overflow, diag::warn_missing_case1, diag::warn_missing_case2, diag::warn_missing_case3, diag::warn_missing_cases, diag::warn_not_in_enum, -1 };
static const short DiagArray341[] = { diag::warn_def_missing_case1, diag::warn_def_missing_case2, diag::warn_def_missing_case3, diag::warn_def_missing_cases, -1 };
static const short DiagArray343[] = { diag::warn_comparison_always, diag::warn_lunsigned_always_true_comparison, diag::warn_runsigned_always_true_comparison, -1 };
static const short DiagSubGroup343[] = { 344, -1 };
static const short DiagArray344[] = { diag::warn_out_of_range_compare, -1 };
static const short DiagArray345[] = { diag::ext_typecheck_decl_incomplete_type, -1 };
static const short DiagSubGroup346[] = { 348, 347, 350, -1 };
static const short DiagArray347[] = { diag::warn_cannot_resolve_lock, diag::warn_double_lock, diag::warn_expecting_lock_held_on_loop, diag::warn_expecting_locked, diag::warn_fun_excludes_mutex, diag::warn_fun_requires_lock, diag::warn_lock_exclusive_and_shared, diag::warn_lock_some_predecessors, diag::warn_no_unlock, diag::warn_unlock_but_no_lock, diag::warn_var_deref_requires_any_lock, diag::warn_var_deref_requires_lock, diag::warn_variable_requires_any_lock, diag::warn_variable_requires_lock, -1 };
static const short DiagArray348[] = { diag::warn_thread_attribute_argument_not_class, diag::warn_thread_attribute_argument_not_lockable, diag::warn_thread_attribute_decl_not_lockable, diag::warn_thread_attribute_decl_not_pointer, diag::warn_thread_attribute_ignored, diag::warn_thread_attribute_wrong_decl_type, -1 };
static const short DiagArray349[] = { diag::warn_thread_safety_beta, -1 };
static const short DiagArray350[] = { diag::warn_fun_requires_lock_precise, diag::warn_var_deref_requires_lock_precise, diag::warn_variable_requires_lock_precise, -1 };
static const short DiagArray351[] = { diag::trigraph_converted, diag::trigraph_ends_block_comment, diag::trigraph_ignored, diag::trigraph_ignored_block_comment, -1 };
static const short DiagArray353[] = { diag::warn_type_safety_null_pointer_required, diag::warn_type_safety_type_mismatch, diag::warn_type_tag_for_datatype_wrong_kind, -1 };
static const short DiagArray354[] = { diag::warn_redefinition_of_typedef, -1 };
static const short DiagArray355[] = { diag::warn_typename_missing, -1 };
static const short DiagArray356[] = { diag::warn_undeclared_selector, -1 };
static const short DiagArray357[] = { diag::warn_pp_undef_identifier, -1 };
static const short DiagArray358[] = { diag::warn_undefined_inline, -1 };
static const short DiagArray359[] = { diag::warn_undefined_internal, -1 };
static const short DiagArray360[] = { diag::warn_pointer_indirection_from_incompatible_type, diag::warn_undefined_reinterpret_cast, -1 };
static const short DiagArray361[] = { diag::warn_ucn_escape_incomplete, diag::warn_ucn_escape_no_digits, diag::warn_ucn_escape_surrogate, diag::warn_ucn_not_valid_in_c89, diag::warn_ucn_not_valid_in_c89_literal, -1 };
static const short DiagArray362[] = { diag::ext_unicode_whitespace, -1 };
static const short DiagArray363[] = { diag::warn_field_is_uninit, diag::warn_reference_field_is_uninit, diag::warn_uninit_byref_blockvar_captured_by_block, diag::warn_uninit_self_reference_in_init, diag::warn_uninit_self_reference_in_reference_init, diag::warn_uninit_var, -1 };
static const short DiagSubGroup363[] = { 313, 319, -1 };
static const short DiagArray364[] = { diag::ext_on_off_switch_syntax, diag::ext_pragma_syntax_eod, diag::ext_stdc_pragma_ignored, diag::warn_pragma_diagnostic_cannot_pop, diag::warn_pragma_diagnostic_invalid, diag::warn_pragma_diagnostic_invalid_option, diag::warn_pragma_diagnostic_invalid_token, diag::warn_pragma_diagnostic_unknown_warning, diag::warn_pragma_ignored, diag::warn_pragma_include_alias_expected, diag::warn_pragma_include_alias_expected_filename, diag::warn_pragma_include_alias_mismatch_angle, diag::warn_pragma_include_alias_mismatch_quote, diag::warn_stdc_fenv_access_not_supported, -1 };
static const short DiagArray365[] = { diag::warn_unknown_negative_warning_option, diag::warn_unknown_negative_warning_option_suggest, diag::warn_unknown_warning_option, diag::warn_unknown_warning_option_suggest, diag::warn_unknown_warning_specifier, -1 };
static const short DiagArray366[] = { diag::ext_template_arg_unnamed_type, -1 };
static const short DiagSubGroup366[] = { 63, -1 };
static const short DiagArray367[] = { diag::warn_unneeded_internal_decl, diag::warn_unneeded_static_internal_decl, -1 };
static const short DiagArray368[] = { diag::warn_unneeded_member_function, -1 };
static const short DiagArray369[] = { diag::warn_unreachable, -1 };
static const short DiagArray370[] = { diag::warn_unsequenced_mod_mod, diag::warn_unsequenced_mod_use, -1 };
static const short DiagArray371[] = { diag::warn_attribute_protected_visibility, -1 };
static const short DiagSubGroup372[] = { 373, 377, 378, 382, 385, 386, -1 };
static const short DiagArray374[] = { diag::warn_drv_empty_joined_argument, diag::warn_drv_input_file_unused, diag::warn_drv_input_file_unused_by_cpp, diag::warn_drv_preprocessed_input_file_unused, diag::warn_drv_unused_argument, -1 };
static const short DiagSubGroup374[] = { 384, -1 };
static const short DiagArray375[] = { diag::warn_unused_comparison, -1 };
static const short DiagArray376[] = { diag::warn_unused_exception_param, -1 };
static const short DiagArray377[] = { diag::warn_unused_function, -1 };
static const short DiagSubGroup377[] = { 367, -1 };
static const short DiagArray378[] = { diag::warn_unused_label, -1 };
static const short DiagArray379[] = { diag::pp_macro_not_used, -1 };
static const short DiagArray380[] = { diag::warn_unused_member_function, -1 };
static const short DiagSubGroup380[] = { 368, -1 };
static const short DiagArray381[] = { diag::warn_unused_parameter, -1 };
static const short DiagArray382[] = { diag::warn_unused_private_field, -1 };
static const short DiagArray383[] = { diag::warn_unused_result, -1 };
static const short DiagArray384[] = { diag::warn_drv_unused_sanitizer, -1 };
static const short DiagArray385[] = { diag::warn_unused_call, diag::warn_unused_container_subscript_expr, diag::warn_unused_expr, diag::warn_unused_property_expr, diag::warn_unused_voidptr, -1 };
static const short DiagSubGroup385[] = { 375, 383, -1 };
static const short DiagArray386[] = { diag::warn_unused_variable, -1 };
static const short DiagArray387[] = { diag::warn_unused_volatile, -1 };
static const short DiagArray388[] = { diag::warn_used_but_marked_unused, -1 };
static const short DiagArray389[] = { diag::warn_user_literal_reserved, -1 };
static const short DiagArray390[] = { diag::ext_named_variadic_macro, diag::ext_variadic_macro, -1 };
static const short DiagArray391[] = { diag::warn_incompatible_vectors, -1 };
static const short DiagSubGroup392[] = { 391, -1 };
static const short DiagArray393[] = { diag::warn_empty_parens_are_function_decl, diag::warn_parens_disambiguated_as_function_declaration, -1 };
static const short DiagArray394[] = { diag::warn_decl_in_param_list, diag::warn_redefinition_in_param_list, -1 };
static const short DiagArray395[] = { diag::warn_vla_used, -1 };
static const short DiagArray396[] = { diag::ext_vla, -1 };
static const short DiagArray398[] = { diag::warn_weak_template_vtable, -1 };
static const short DiagArray399[] = { diag::warn_weak_vtable, -1 };
static const short DiagSubGroup400[] = { 101, -1 };
static const short DiagArray401[] = { diag::ext_typecheck_zero_array_size, -1 };
#endif // GET_DIAG_ARRAYS


#ifdef GET_DIAG_TABLE
  { 0, "",                                               0, DiagSubGroup0 },
  { 16, "#pragma-messages",                               DiagArray1, 0 },
  { 9, "#warnings",                                      DiagArray2, 0 },
  { 16, "CFString-literal",                               DiagArray3, 0 },
  { 18, "NSObject-attribute",                             DiagArray4, 0 },
  { 3, "abi",                                            0, 0 },
  { 20, "abstract-final-class",                           DiagArray6, 0 },
  { 7, "address",                                        0, 0 },
  { 26, "address-of-array-temporary",                     DiagArray8, 0 },
  { 20, "address-of-temporary",                           DiagArray9, 0 },
  { 16, "aggregate-return",                               0, 0 },
  { 3, "all",                                            0, DiagSubGroup11 },
  { 15, "ambiguous-macro",                                DiagArray12, 0 },
  { 25, "ambiguous-member-template",                      DiagArray13, 0 },
  { 28, "analyzer-incompatible-plugin",                   DiagArray14, 0 },
  { 21, "anonymous-pack-parens",                          DiagArray15, 0 },
  { 3, "arc",                                            0, DiagSubGroup16 },
  { 7, "arc-abi",                                        0, 0 },
  { 37, "arc-bridge-casts-disallowed-in-nonarc",          DiagArray18, 0 },
  { 30, "arc-maybe-repeated-use-of-weak",                 DiagArray19, 0 },
  { 21, "arc-non-pod-memaccess",                          DiagArray20, 0 },
  { 25, "arc-performSelector-leaks",                      DiagArray21, 0 },
  { 24, "arc-repeated-use-of-weak",                       DiagArray22, DiagSubGroup22 },
  { 17, "arc-retain-cycles",                              DiagArray23, 0 },
  { 26, "arc-unsafe-retained-assign",                     DiagArray24, 0 },
  { 12, "array-bounds",                                   DiagArray25, 0 },
  { 31, "array-bounds-pointer-arithmetic",                DiagArray26, 0 },
  { 3, "asm",                                            0, DiagSubGroup27 },
  { 18, "asm-operand-widths",                             DiagArray28, 0 },
  { 11, "assign-enum",                                    DiagArray29, 0 },
  { 17, "atomic-properties",                              0, DiagSubGroup30 },
  { 42, "atomic-property-with-user-defined-accessor",     DiagArray31, 0 },
  { 10, "attributes",                                     DiagArray32, 0 },
  { 11, "auto-import",                                    DiagArray33, 0 },
  { 18, "auto-storage-class",                             DiagArray34, 0 },
  { 11, "auto-var-id",                                    DiagArray35, 0 },
  { 12, "availability",                                   DiagArray36, 0 },
  { 24, "backslash-newline-escape",                       DiagArray37, 0 },
  { 20, "bad-array-new-length",                           DiagArray38, 0 },
  { 17, "bad-function-cast",                              DiagArray39, 0 },
  { 22, "bind-to-temporary-copy",                         DiagArray40, DiagSubGroup40 },
  { 28, "bitfield-constant-conversion",                   DiagArray41, 0 },
  { 22, "bitwise-op-parentheses",                         DiagArray42, 0 },
  { 15, "bool-conversion",                                DiagArray43, 0 },
  { 16, "bool-conversions",                               0, DiagSubGroup44 },
  { 23, "builtin-macro-redefined",                        DiagArray45, 0 },
  { 23, "builtin-requires-header",                        DiagArray46, 0 },
  { 10, "c++-compat",                                     DiagArray47, 0 },
  { 12, "c++0x-compat",                                   0, DiagSubGroup48 },
  { 16, "c++0x-extensions",                               0, DiagSubGroup49 },
  { 15, "c++0x-narrowing",                                0, DiagSubGroup50 },
  { 12, "c++11-compat",                                   DiagArray51, DiagSubGroup51 },
  { 21, "c++11-compat-pedantic",                          0, DiagSubGroup52 },
  { 42, "c++11-compat-reserved-user-defined-literal",     DiagArray53, 0 },
  { 16, "c++11-extensions",                               DiagArray54, DiagSubGroup54 },
  { 16, "c++11-extra-semi",                               DiagArray55, 0 },
  { 15, "c++11-long-long",                                DiagArray56, 0 },
  { 15, "c++11-narrowing",                                DiagArray57, 0 },
  { 16, "c++1y-extensions",                               DiagArray58, 0 },
  { 12, "c++98-compat",                                   DiagArray59, DiagSubGroup59 },
  { 35, "c++98-compat-bind-to-temporary-copy",            DiagArray60, 0 },
  { 37, "c++98-compat-local-type-template-args",          DiagArray61, 0 },
  { 21, "c++98-compat-pedantic",                          DiagArray62, DiagSubGroup62 },
  { 39, "c++98-compat-unnamed-type-template-args",        DiagArray63, 0 },
  { 14, "c11-extensions",                                 DiagArray64, 0 },
  { 10, "c99-compat",                                     DiagArray65, 0 },
  { 14, "c99-extensions",                                 DiagArray66, 0 },
  { 10, "cast-align",                                     DiagArray67, 0 },
  { 16, "cast-of-sel-type",                               DiagArray68, 0 },
  { 9, "cast-qual",                                      0, 0 },
  { 10, "char-align",                                     0, 0 },
  { 15, "char-subscripts",                                DiagArray71, 0 },
  { 7, "comment",                                        DiagArray72, 0 },
  { 8, "comments",                                       0, DiagSubGroup73 },
  { 30, "compare-distinct-pointer-types",                 DiagArray74, 0 },
  { 22, "complex-component-init",                         DiagArray75, 0 },
  { 25, "conditional-type-mismatch",                      DiagArray76, 0 },
  { 25, "conditional-uninitialized",                      DiagArray77, 0 },
  { 13, "config-macros",                                  DiagArray78, 0 },
  { 19, "constant-conversion",                            DiagArray79, DiagSubGroup79 },
  { 24, "constant-logical-operand",                       DiagArray80, 0 },
  { 19, "constexpr-not-const",                            DiagArray81, 0 },
  { 10, "conversion",                                     DiagArray82, DiagSubGroup82 },
  { 15, "conversion-null",                                0, DiagSubGroup83 },
  { 22, "covered-switch-default",                         DiagArray84, 0 },
  { 17, "ctor-dtor-privacy",                              0, 0 },
  { 24, "custom-atomic-properties",                       DiagArray86, 0 },
  { 18, "cxx98-cxx11-compat",                             DiagArray87, 0 },
  { 27, "cxx98-cxx11-compat-pedantic",                    DiagArray88, DiagSubGroup88 },
  { 13, "dangling-else",                                  DiagArray89, 0 },
  { 14, "dangling-field",                                 DiagArray90, 0 },
  { 25, "dangling-initializer-list",                      DiagArray91, 0 },
  { 27, "declaration-after-statement",                    DiagArray92, 0 },
  { 22, "delegating-ctor-cycles",                         DiagArray93, 0 },
  { 17, "delete-incomplete",                              DiagArray94, 0 },
  { 23, "delete-non-virtual-dtor",                        DiagArray95, 0 },
  { 10, "deprecated",                                     DiagArray96, DiagSubGroup96 },
  { 23, "deprecated-declarations",                        DiagArray97, 0 },
  { 26, "deprecated-implementations",                     DiagArray98, 0 },
  { 25, "deprecated-objc-isa-usage",                      DiagArray99, 0 },
  { 37, "deprecated-objc-pointer-introspection",          DiagArray100, 0 },
  { 27, "deprecated-writable-strings",                    DiagArray101, 0 },
  { 18, "direct-ivar-access",                             DiagArray102, 0 },
  { 24, "disabled-macro-expansion",                       DiagArray103, 0 },
  { 21, "disabled-optimization",                          0, 0 },
  { 12, "discard-qual",                                   0, 0 },
  { 28, "distributed-object-modifiers",                   DiagArray106, 0 },
  { 11, "div-by-zero",                                    0, 0 },
  { 16, "division-by-zero",                               DiagArray108, 0 },
  { 13, "documentation",                                  DiagArray109, DiagSubGroup109 },
  { 29, "documentation-deprecated-sync",                  DiagArray110, 0 },
  { 18, "documentation-html",                             DiagArray111, 0 },
  { 22, "documentation-pedantic",                         DiagArray112, DiagSubGroup112 },
  { 29, "documentation-unknown-command",                  DiagArray113, 0 },
  { 30, "dollar-in-identifier-extension",                 DiagArray114, 0 },
  { 24, "duplicate-decl-specifier",                       DiagArray115, 0 },
  { 14, "duplicate-enum",                                 DiagArray116, 0 },
  { 20, "duplicate-method-arg",                           DiagArray117, 0 },
  { 22, "duplicate-method-match",                         DiagArray118, 0 },
  { 23, "dynamic-class-memaccess",                        DiagArray119, 0 },
  { 6, "effc++",                                         0, 0 },
  { 18, "embedded-directive",                             DiagArray121, 0 },
  { 10, "empty-body",                                     DiagArray122, 0 },
  { 22, "empty-translation-unit",                         DiagArray123, 0 },
  { 12, "endif-labels",                                   0, DiagSubGroup124 },
  { 12, "enum-compare",                                   DiagArray125, 0 },
  { 15, "enum-conversion",                                DiagArray126, 0 },
  { 21, "exit-time-destructors",                          DiagArray127, 0 },
  { 23, "explicit-ownership-type",                        DiagArray128, 0 },
  { 17, "extended-offsetof",                              DiagArray129, 0 },
  { 18, "extern-initializer",                             DiagArray130, 0 },
  { 5, "extra",                                          0, DiagSubGroup131 },
  { 10, "extra-semi",                                     DiagArray132, DiagSubGroup132 },
  { 12, "extra-tokens",                                   DiagArray133, 0 },
  { 25, "flexible-array-extensions",                      DiagArray134, 0 },
  { 11, "float-equal",                                    DiagArray135, 0 },
  { 6, "format",                                         DiagArray136, DiagSubGroup136 },
  { 17, "format-extra-args",                              DiagArray137, 0 },
  { 24, "format-invalid-specifier",                       DiagArray138, 0 },
  { 14, "format-non-iso",                                 DiagArray139, 0 },
  { 17, "format-nonliteral",                              DiagArray140, DiagSubGroup140 },
  { 15, "format-security",                                DiagArray141, 0 },
  { 10, "format-y2k",                                     0, 0 },
  { 18, "format-zero-length",                             DiagArray143, 0 },
  { 8, "format=2",                                       0, DiagSubGroup144 },
  { 19, "four-char-constants",                            DiagArray145, 0 },
  { 10, "gcc-compat",                                     DiagArray146, 0 },
  { 19, "global-constructors",                            DiagArray147, 0 },
  { 3, "gnu",                                            DiagArray148, DiagSubGroup148 },
  { 27, "gnu-array-member-paren-init",                    DiagArray149, 0 },
  { 14, "gnu-designator",                                 DiagArray150, 0 },
  { 21, "gnu-static-float-init",                          DiagArray151, 0 },
  { 14, "header-hygiene",                                 DiagArray152, 0 },
  { 21, "idiomatic-parentheses",                          DiagArray153, 0 },
  { 18, "ignored-attributes",                             DiagArray154, 0 },
  { 18, "ignored-qualifiers",                             DiagArray155, 0 },
  { 8, "implicit",                                       0, DiagSubGroup156 },
  { 26, "implicit-atomic-properties",                     DiagArray157, 0 },
  { 42, "implicit-conversion-floating-point-to-bool",     DiagArray158, 0 },
  { 32, "implicit-exception-spec-mismatch",               DiagArray159, 0 },
  { 20, "implicit-fallthrough",                           DiagArray160, DiagSubGroup160 },
  { 33, "implicit-fallthrough-per-function",              DiagArray161, 0 },
  { 29, "implicit-function-declaration",                  DiagArray162, 0 },
  { 12, "implicit-int",                                   DiagArray163, 0 },
  { 20, "implicit-retain-self",                           DiagArray164, 0 },
  { 6, "import",                                         0, 0 },
  { 38, "import-preprocessor-directive-pedantic",         DiagArray166, 0 },
  { 34, "incompatible-library-redeclaration",             DiagArray167, 0 },
  { 26, "incompatible-pointer-types",                     DiagArray168, DiagSubGroup168 },
  { 46, "incompatible-pointer-types-discards-qualifiers", DiagArray169, 0 },
  { 25, "incomplete-implementation",                      DiagArray170, 0 },
  { 19, "incomplete-umbrella",                            DiagArray171, 0 },
  { 23, "inherited-variadic-ctor",                        DiagArray172, 0 },
  { 9, "init-self",                                      0, 0 },
  { 21, "initializer-overrides",                          DiagArray174, 0 },
  { 6, "inline",                                         0, 0 },
  { 14, "int-conversion",                                 DiagArray176, 0 },
  { 15, "int-conversions",                                0, DiagSubGroup177 },
  { 19, "int-to-pointer-cast",                            DiagArray178, 0 },
  { 16, "integer-overflow",                               DiagArray179, 0 },
  { 17, "invalid-constexpr",                              DiagArray180, 0 },
  { 16, "invalid-iboutlet",                               DiagArray181, 0 },
  { 16, "invalid-noreturn",                               DiagArray182, 0 },
  { 16, "invalid-offsetof",                               DiagArray183, 0 },
  { 11, "invalid-pch",                                    0, 0 },
  { 16, "invalid-pp-token",                               DiagArray185, 0 },
  { 23, "invalid-source-encoding",                        DiagArray186, 0 },
  { 19, "invalid-token-paste",                            DiagArray187, 0 },
  { 22, "knr-promoted-parameter",                         DiagArray188, 0 },
  { 24, "language-extension-token",                       DiagArray189, 0 },
  { 19, "large-by-value-copy",                            DiagArray190, 0 },
  { 18, "literal-conversion",                             DiagArray191, 0 },
  { 13, "literal-range",                                  DiagArray192, 0 },
  { 24, "local-type-template-args",                       DiagArray193, DiagSubGroup193 },
  { 22, "logical-op-parentheses",                         DiagArray194, 0 },
  { 9, "long-long",                                      DiagArray195, DiagSubGroup195 },
  { 13, "loop-analysis",                                  DiagArray196, 0 },
  { 4, "main",                                           DiagArray197, 0 },
  { 16, "main-return-type",                               DiagArray198, 0 },
  { 23, "malformed-warning-check",                        DiagArray199, 0 },
  { 17, "method-signatures",                              DiagArray200, 0 },
  { 9, "microsoft",                                      DiagArray201, 0 },
  { 16, "microsoft-exists",                               DiagArray202, 0 },
  { 28, "mismatched-method-attributes",                   DiagArray203, 0 },
  { 26, "mismatched-parameter-types",                     DiagArray204, 0 },
  { 23, "mismatched-return-types",                        DiagArray205, 0 },
  { 15, "mismatched-tags",                                DiagArray206, 0 },
  { 14, "missing-braces",                                 DiagArray207, 0 },
  { 20, "missing-declarations",                           DiagArray208, 0 },
  { 26, "missing-field-initializers",                     DiagArray209, 0 },
  { 24, "missing-format-attribute",                       0, 0 },
  { 20, "missing-include-dirs",                           0, 0 },
  { 26, "missing-method-return-type",                     DiagArray212, 0 },
  { 16, "missing-noreturn",                               DiagArray213, 0 },
  { 18, "missing-prototypes",                             DiagArray214, 0 },
  { 21, "missing-selector-name",                          DiagArray215, 0 },
  { 15, "missing-sysroot",                                DiagArray216, 0 },
  { 29, "missing-variable-declarations",                  DiagArray217, 0 },
  { 15, "module-conflict",                                DiagArray218, 0 },
  { 4, "most",                                           0, DiagSubGroup219 },
  { 9, "multichar",                                      DiagArray220, 0 },
  { 9, "narrowing",                                      0, DiagSubGroup221 },
  { 17, "nested-anon-types",                              DiagArray222, 0 },
  { 14, "nested-externs",                                 0, 0 },
  { 11, "newline-eof",                                    DiagArray224, 0 },
  { 7, "non-gcc",                                        0, DiagSubGroup225 },
  { 27, "non-literal-null-conversion",                    DiagArray226, 0 },
  { 15, "non-pod-varargs",                                DiagArray227, 0 },
  { 16, "non-virtual-dtor",                               DiagArray228, 0 },
  { 7, "nonnull",                                        DiagArray229, 0 },
  { 21, "nonportable-cfstrings",                          0, 0 },
  { 15, "null-arithmetic",                                DiagArray231, 0 },
  { 14, "null-character",                                 DiagArray232, 0 },
  { 15, "null-conversion",                                DiagArray233, 0 },
  { 16, "null-dereference",                               DiagArray234, 0 },
  { 43, "objc-autosynthesis-property-ivar-name-match",    DiagArray235, 0 },
  { 14, "objc-cocoa-api",                                 0, DiagSubGroup236 },
  { 31, "objc-forward-class-redefinition",                DiagArray237, 0 },
  { 20, "objc-interface-ivars",                           DiagArray238, 0 },
  { 20, "objc-literal-compare",                           DiagArray239, DiagSubGroup239 },
  { 18, "objc-method-access",                             DiagArray240, 0 },
  { 31, "objc-missing-property-synthesis",                DiagArray241, 0 },
  { 24, "objc-missing-super-calls",                       DiagArray242, 0 },
  { 34, "objc-noncopy-retain-block-property",             DiagArray243, 0 },
  { 26, "objc-nonunified-exceptions",                     DiagArray244, 0 },
  { 28, "objc-property-implementation",                   DiagArray245, 0 },
  { 42, "objc-property-matches-cocoa-ownership-rule",     DiagArray246, 0 },
  { 26, "objc-property-no-attribute",                     DiagArray247, 0 },
  { 23, "objc-property-synthesis",                        DiagArray248, 0 },
  { 35, "objc-protocol-method-implementation",            DiagArray249, 0 },
  { 32, "objc-protocol-property-synthesis",               DiagArray250, 0 },
  { 34, "objc-readonly-with-setter-property",             DiagArray251, 0 },
  { 22, "objc-redundant-api-use",                         0, DiagSubGroup252 },
  { 26, "objc-redundant-literal-use",                     DiagArray253, 0 },
  { 15, "objc-root-class",                                DiagArray254, 0 },
  { 19, "objc-string-compare",                            DiagArray255, 0 },
  { 3, "odr",                                            DiagArray256, 0 },
  { 14, "old-style-cast",                                 0, 0 },
  { 20, "old-style-definition",                           0, 0 },
  { 23, "out-of-line-declaration",                        DiagArray259, 0 },
  { 12, "over-aligned",                                   DiagArray260, 0 },
  { 8, "overflow",                                       0, 0 },
  { 18, "overlength-strings",                             DiagArray262, 0 },
  { 31, "overloaded-shift-op-parentheses",                DiagArray263, 0 },
  { 18, "overloaded-virtual",                             DiagArray264, 0 },
  { 26, "overriding-method-mismatch",                     DiagArray265, 0 },
  { 6, "packed",                                         DiagArray266, 0 },
  { 6, "padded",                                         DiagArray267, 0 },
  { 11, "parentheses",                                    DiagArray268, DiagSubGroup268 },
  { 20, "parentheses-equality",                           DiagArray269, 0 },
  { 8, "pedantic",                                       DiagArray270, DiagSubGroup270 },
  { 13, "pointer-arith",                                  DiagArray271, 0 },
  { 12, "pointer-sign",                                   DiagArray272, 0 },
  { 19, "pointer-to-int-cast",                            0, 0 },
  { 21, "pointer-type-mismatch",                          DiagArray274, 0 },
  { 38, "predefined-identifier-outside-function",         DiagArray275, 0 },
  { 14, "private-extern",                                 DiagArray276, 0 },
  { 8, "protocol",                                       DiagArray277, 0 },
  { 26, "readonly-iboutlet-property",                     DiagArray278, 0 },
  { 21, "readonly-setter-attrs",                          DiagArray279, 0 },
  { 13, "receiver-expr",                                  DiagArray280, 0 },
  { 22, "receiver-forward-class",                         DiagArray281, 0 },
  { 16, "receiver-is-weak",                               DiagArray282, 0 },
  { 15, "redundant-decls",                                0, 0 },
  { 22, "reinterpret-base-class",                         DiagArray284, 0 },
  { 7, "reorder",                                        DiagArray285, 0 },
  { 24, "requires-super-attribute",                       DiagArray286, 0 },
  { 29, "reserved-user-defined-literal",                  DiagArray287, DiagSubGroup287 },
  { 20, "return-stack-address",                           DiagArray288, 0 },
  { 11, "return-type",                                    DiagArray289, DiagSubGroup289 },
  { 21, "return-type-c-linkage",                          DiagArray290, 0 },
  { 7, "section",                                        DiagArray291, 0 },
  { 8, "selector",                                       DiagArray292, 0 },
  { 11, "self-assign",                                    DiagArray293, DiagSubGroup293 },
  { 17, "self-assign-field",                              DiagArray294, 0 },
  { 28, "semicolon-before-method-body",                   DiagArray295, 0 },
  { 8, "sentinel",                                       DiagArray296, 0 },
  { 14, "sequence-point",                                 0, DiagSubGroup297 },
  { 22, "serialized-diagnostics",                         DiagArray298, 0 },
  { 6, "shadow",                                         DiagArray299, 0 },
  { 11, "shadow-ivar",                                    DiagArray300, 0 },
  { 20, "shift-count-negative",                           DiagArray301, 0 },
  { 20, "shift-count-overflow",                           DiagArray302, 0 },
  { 20, "shift-op-parentheses",                           DiagArray303, 0 },
  { 14, "shift-overflow",                                 DiagArray304, 0 },
  { 19, "shift-sign-overflow",                            DiagArray305, 0 },
  { 16, "shorten-64-to-32",                               DiagArray306, 0 },
  { 12, "sign-compare",                                   DiagArray307, 0 },
  { 15, "sign-conversion",                                DiagArray308, 0 },
  { 10, "sign-promo",                                     0, 0 },
  { 21, "sizeof-array-argument",                          DiagArray310, 0 },
  { 18, "sizeof-array-decay",                             DiagArray311, 0 },
  { 24, "sizeof-pointer-memaccess",                       DiagArray312, 0 },
  { 23, "sometimes-uninitialized",                        DiagArray313, 0 },
  { 18, "source-uses-openmp",                             DiagArray314, 0 },
  { 15, "stack-protector",                                0, 0 },
  { 17, "static-float-init",                              DiagArray316, DiagSubGroup316 },
  { 16, "static-in-inline",                               DiagArray317, 0 },
  { 22, "static-local-in-inline",                         DiagArray318, 0 },
  { 16, "static-self-init",                               DiagArray319, 0 },
  { 15, "strict-aliasing",                                0, 0 },
  { 17, "strict-aliasing=0",                              0, 0 },
  { 17, "strict-aliasing=1",                              0, 0 },
  { 17, "strict-aliasing=2",                              0, 0 },
  { 15, "strict-overflow",                                0, 0 },
  { 17, "strict-overflow=0",                              0, 0 },
  { 17, "strict-overflow=1",                              0, 0 },
  { 17, "strict-overflow=2",                              0, 0 },
  { 17, "strict-overflow=3",                              0, 0 },
  { 17, "strict-overflow=4",                              0, 0 },
  { 17, "strict-overflow=5",                              0, 0 },
  { 17, "strict-prototypes",                              0, 0 },
  { 21, "strict-selector-match",                          DiagArray332, 0 },
  { 14, "string-compare",                                 DiagArray333, 0 },
  { 17, "string-conversion",                              DiagArray334, 0 },
  { 15, "string-plus-int",                                DiagArray335, 0 },
  { 20, "strlcpy-strlcat-size",                           DiagArray336, 0 },
  { 12, "strncat-size",                                   DiagArray337, 0 },
  { 27, "super-class-method-mismatch",                    DiagArray338, 0 },
  { 6, "switch",                                         DiagArray339, 0 },
  { 14, "switch-default",                                 0, 0 },
  { 11, "switch-enum",                                    DiagArray341, 0 },
  { 5, "synth",                                          0, 0 },
  { 20, "tautological-compare",                           DiagArray343, DiagSubGroup343 },
  { 42, "tautological-constant-out-of-range-compare",     DiagArray344, 0 },
  { 36, "tentative-definition-incomplete-type",           DiagArray345, 0 },
  { 13, "thread-safety",                                  0, DiagSubGroup346 },
  { 22, "thread-safety-analysis",                         DiagArray347, 0 },
  { 24, "thread-safety-attributes",                       DiagArray348, 0 },
  { 18, "thread-safety-beta",                             DiagArray349, 0 },
  { 21, "thread-safety-precise",                          DiagArray350, 0 },
  { 9, "trigraphs",                                      DiagArray351, 0 },
  { 11, "type-limits",                                    0, 0 },
  { 11, "type-safety",                                    DiagArray353, 0 },
  { 20, "typedef-redefinition",                           DiagArray354, 0 },
  { 16, "typename-missing",                               DiagArray355, 0 },
  { 19, "undeclared-selector",                            DiagArray356, 0 },
  { 5, "undef",                                          DiagArray357, 0 },
  { 16, "undefined-inline",                               DiagArray358, 0 },
  { 18, "undefined-internal",                             DiagArray359, 0 },
  { 26, "undefined-reinterpret-cast",                     DiagArray360, 0 },
  { 7, "unicode",                                        DiagArray361, 0 },
  { 18, "unicode-whitespace",                             DiagArray362, 0 },
  { 13, "uninitialized",                                  DiagArray363, DiagSubGroup363 },
  { 15, "unknown-pragmas",                                DiagArray364, 0 },
  { 22, "unknown-warning-option",                         DiagArray365, 0 },
  { 26, "unnamed-type-template-args",                     DiagArray366, DiagSubGroup366 },
  { 29, "unneeded-internal-declaration",                  DiagArray367, 0 },
  { 24, "unneeded-member-function",                       DiagArray368, 0 },
  { 16, "unreachable-code",                               DiagArray369, 0 },
  { 11, "unsequenced",                                    DiagArray370, 0 },
  { 22, "unsupported-visibility",                         DiagArray371, 0 },
  { 6, "unused",                                         0, DiagSubGroup372 },
  { 15, "unused-argument",                                0, 0 },
  { 28, "unused-command-line-argument",                   DiagArray374, DiagSubGroup374 },
  { 17, "unused-comparison",                              DiagArray375, 0 },
  { 26, "unused-exception-parameter",                     DiagArray376, 0 },
  { 15, "unused-function",                                DiagArray377, DiagSubGroup377 },
  { 12, "unused-label",                                   DiagArray378, 0 },
  { 13, "unused-macros",                                  DiagArray379, 0 },
  { 22, "unused-member-function",                         DiagArray380, DiagSubGroup380 },
  { 16, "unused-parameter",                               DiagArray381, 0 },
  { 20, "unused-private-field",                           DiagArray382, 0 },
  { 13, "unused-result",                                  DiagArray383, 0 },
  { 24, "unused-sanitize-argument",                       DiagArray384, 0 },
  { 12, "unused-value",                                   DiagArray385, DiagSubGroup385 },
  { 15, "unused-variable",                                DiagArray386, 0 },
  { 22, "unused-volatile-lvalue",                         DiagArray387, 0 },
  { 22, "used-but-marked-unused",                         DiagArray388, 0 },
  { 21, "user-defined-literals",                          DiagArray389, 0 },
  { 15, "variadic-macros",                                DiagArray390, 0 },
  { 17, "vector-conversion",                              DiagArray391, 0 },
  { 18, "vector-conversions",                             0, DiagSubGroup392 },
  { 12, "vexing-parse",                                   DiagArray393, 0 },
  { 10, "visibility",                                     DiagArray394, 0 },
  { 3, "vla",                                            DiagArray395, 0 },
  { 13, "vla-extension",                                  DiagArray396, 0 },
  { 21, "volatile-register-var",                          0, 0 },
  { 21, "weak-template-vtables",                          DiagArray398, 0 },
  { 12, "weak-vtables",                                   DiagArray399, 0 },
  { 13, "write-strings",                                  0, DiagSubGroup400 },
  { 17, "zero-length-array",                              DiagArray401, 0 },
#endif // GET_DIAG_TABLE


#ifdef GET_CATEGORY_TABLE
CATEGORY("", DiagCat_None)
CATEGORY("Lexical or Preprocessor Issue", DiagCat_Lexical_or_Preprocessor_Issue)
CATEGORY("Semantic Issue", DiagCat_Semantic_Issue)
CATEGORY("Lambda Issue", DiagCat_Lambda_Issue)
CATEGORY("Parse Issue", DiagCat_Parse_Issue)
CATEGORY("ARC Semantic Issue", DiagCat_ARC_Semantic_Issue)
CATEGORY("ARC and @properties", DiagCat_ARC_and__properties)
CATEGORY("ARC Casting Rules", DiagCat_ARC_Casting_Rules)
CATEGORY("ARC Parse Issue", DiagCat_ARC_Parse_Issue)
CATEGORY("ARC Weak References", DiagCat_ARC_Weak_References)
CATEGORY("ARC Restrictions", DiagCat_ARC_Restrictions)
CATEGORY("Inline Assembly Issue", DiagCat_Inline_Assembly_Issue)
CATEGORY("OpenMP Issue", DiagCat_OpenMP_Issue)
CATEGORY("Modules Issue", DiagCat_Modules_Issue)
CATEGORY("OpenMP Parse Issue", DiagCat_OpenMP_Parse_Issue)
CATEGORY("User Defined Issues", DiagCat_User_Defined_Issues)
CATEGORY("Value Conversion Issue", DiagCat_Value_Conversion_Issue)
CATEGORY("Documentation Issue", DiagCat_Documentation_Issue)
CATEGORY("ARC Retain Cycle", DiagCat_ARC_Retain_Cycle)
CATEGORY("Related Result Type Issue", DiagCat_Related_Result_Type_Issue)
CATEGORY("#warning Directive", DiagCat__warning_Directive)
CATEGORY("Deprecations", DiagCat_Deprecations)
CATEGORY("Format String Issue", DiagCat_Format_String_Issue)
CATEGORY("Cocoa API Issue", DiagCat_Cocoa_API_Issue)
CATEGORY("#pragma message Directive", DiagCat__pragma_message_Directive)
CATEGORY("Unused Entity Issue", DiagCat_Unused_Entity_Issue)
#endif // GET_CATEGORY_TABLE

